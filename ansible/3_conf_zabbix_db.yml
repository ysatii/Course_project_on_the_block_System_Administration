- name: Установка и настройка zabbix 
  hosts: zabbix_server
  gather_facts: no
  vars:
    host: "localhost"                     # адрес хоста
    db_port: 5432                         # PostgreSQL (по умолчанию 5432)
    db_name: "zabbix"                     # базы данных
    db_user: "{{ zabbix_user }}"          # пользователя базы данных
    db_password: "{{ zabbix_password }}"  # пароль пользователя базы данных
  become: yes
  tasks:

  - name: Проверка доступности
    ping:
    register: ping_result
 
  - name: Обновление системы и установка зависимостей
    apt:
      update_cache: yes
      name: ['wget', 'curl', 'nginx', 'postgresql', 'postgresql-contrib', 'php-fpm', 'php-pgsql', 'php-bcmath', 'php-mbstring', 'php-gd', 'php-xml', 'mc']
      state: present
   
 
  
  - name: Обновление кеш
    apt:
      update_cache: yes

  - name: Копирование установочного пакета zabbix репозитория
    copy:
      src: packages/{{ pkg_zabbix }}
      dest: /tmp/

  - name: Установка zabbix репозитория
    command: dpkg -i /tmp/{{ pkg_zabbix }}

  - name: Обновление кеша установщика
    apt:
      update_cache: yes

  
  - name: Установка  Zabbix Server и компонентов
    become: yes
    apt:
      name: ['zabbix-server-pgsql', 'zabbix-frontend-php', 'zabbix-nginx-conf', 'zabbix-agent', 'zabbix-sql-scripts']
      state: present

          # --------------------------------------------------------------

  - name: Создаем пользователя pgsql и базы данных
    shell:
     cmd: |
        su - postgres -c "psql --command \"CREATE USER {{ zabbix_user }} WITH PASSWORD '{{ zabbix_password }}';\"" && \
        su - postgres -c "psql --command \"CREATE DATABASE zabbix OWNER {{ zabbix_user }};\""         
        

 
  # - name: Импортировать начальную структуру базы данных pgsql 
  #  shell: |
  #    zcat /usr/share/zabbix-sql-scripts/postgresql/server.sql.gz | sudo -u {{ zabbix_user }} -p {{ zabbix_password }} psql zabbix  | sudo -u {{ zabbix_user }} -p {{ zabbix_password }} psql zabbix
  
  - name: Копирование файла zabbix.backup с дампом pgsql 
    copy:
      src: "{{restore_dir}}/{{restore_file}}"
      dest: /tmp/

  


  # дополнительные опции --clean --if-exists они удалят востанавливаемые объекты
  - name: Restore PostgreSQL database from dump
    command: >
        pg_restore -h "{{ db_host_local }}" -p "{{ db_port_local }}" -U "{{ db_user_local }}" -d "{{ db_name_local }}" -v /tmp/zabbix.backup
    environment:
        PGPASSWORD: "{{ db_password_local }}"
    register: restore_result
  

   #  ----------------------------------------
   
  - name: Копируем zabbix_server.conf файл настроек zabbix
    template:
      src: templates/zabbix_server.conf.j2
      mode: 0644
      dest: /etc/zabbix/zabbix_server.conf
  
    
  - name: Устанавливаем пароль пользователя pgsql в файле /etc/zabbix/zabbix_server.conf
    lineinfile:
       dest: /etc/zabbix/zabbix_server.conf
       regexp: '^# DBPassword='
       line: 'DBPassword={{ db_password }}' 

  - name : Очищаем файл настроек web интерфейса etc/zabbix/web/zabbix.conf.php
    shell:
      cmd: |
        echo -n > /etc/zabbix/web/zabbix.conf.php

  - name: Генерируем содержимое файла настроек web интерфейса /etc/zabbix/web/zabbix.conf.php
    become: yes
    blockinfile:
       path: /etc/zabbix/web/zabbix.conf.php
       block: |
         <?php
         // Zabbix GUI configuration file.

          $DB['TYPE']				= 'POSTGRESQL';
          $DB['SERVER']			= '{{ host }}';
          $DB['DATABASE']		= '{{ db_name }}';
          $DB['USER']			= '{{ db_user }}';
          $DB['PASSWORD']		= '{{ db_password }}';

          // Schema name. Used for PostgreSQL.
          $DB['SCHEMA']			= '';

          // Used for TLS connection.
          $DB['ENCRYPTION']		= false;
          $DB['KEY_FILE']			= '';
          $DB['CERT_FILE']		= '';
          $DB['CA_FILE']			= '';
          $DB['VERIFY_HOST']		= false;
          $DB['CIPHER_LIST']		= '';

          // Vault configuration. Used if database credentials are stored in Vault secrets manager.
          $DB['VAULT_URL']		= '';
          $DB['VAULT_DB_PATH']	= '';
          $DB['VAULT_TOKEN']		= '';

          // Use IEEE754 compatible value range for 64-bit Numeric (float) history values.
          // This option is enabled by default for new Zabbix installations.
          // For upgraded installations, please read database upgrade notes before enabling this option.
          $DB['DOUBLE_IEEE754']	= true;

          // Uncomment and set to desired values to override Zabbix hostname/IP and port.
          // $ZBX_SERVER			= '';
          // $ZBX_SERVER_PORT		= '';

          $ZBX_SERVER_NAME		= 'my-zabbix';

          $IMAGE_FORMAT_DEFAULT	= IMAGE_FORMAT_PNG;
 
  
  
  - name: Настроиваем  PHP для Zabbix /etc/php/8.1/fpm/php.ini
    become: yes
    blockinfile:
       path: /etc/php/8.1/fpm/php.ini
       block: |
         post_max_size = 16M
         upload_max_filesize = 2M
         max_execution_time = 300
         max_input_time = 300
         memory_limit = 128M
         date.timezone = Europe/Moscow

  - name: Настроиваем  Nginx для Zabbix /etc/nginx/conf.d/zabbix.conf
    blockinfile:
      path: /etc/nginx/conf.d/zabbix.conf
      block: |
          server {
              listen 80;
              server_name  {{ server_name }};

              root /usr/share/zabbix;

              index index.php index.html index.htm;

              location / {
                  try_files $uri $uri/ =404;
              }

              location ~ \.php$ {
                  fastcgi_pass unix:/var/run/php/php8.1-fpm.sock;
                  fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                  include fastcgi_params;
              }

              location ~ /\.ht {
                  deny all;
              }
          }

  - name: Перезапускаем сервисы Zabbix и Nginx
    become: yes
    systemd:
        name: "{{ item }}"
        state: restarted
        enabled: true  
    with_items:
        - zabbix-server
        - zabbix-agent
        - nginx
        - php8.1-fpm

  - name: Печать адреса сервера zabbix
    ansible.builtin.debug:
        msg: "Для работы с zabbix перейдите по адресу http://{{ zabbix_server_ip }} логин 'Admin' пароль 'zabbix'"


