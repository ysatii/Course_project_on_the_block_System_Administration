---




- name: Бэкапирование базы данных 
  hosts: zabbix_server 
  gather_facts: yes
  vars:
    backup_file: "/tmp/{{backup_f}}"
    timestamp: "{{ ansible_date_time.iso8601 }}"
    new_name: "/tmp/{{ db_name_local }}_{{ timestamp }}dump.backup"
    db_host_cloud: c-{{ pg_cluster_id }}.rw.mdb.yandexcloud.net  
    db_port_cloud: 6432
    db_name_cloud: "{{ db_name_local }}"
    db_user_cloud: "{{ db_user_local }}"
    db_password_cloud: "{{ db_password_local }}"
  tasks:


     
    - name: Проверяем, существует ли файл на удаленном сервере
      ansible.builtin.stat:
        path: "{{ backup_file }}"
      register: file_stat
      become: yes

    - name: Удаляем файл, если он существует
      ansible.builtin.file:
        path: "{{ backup_file }}"
        state: absent
      become: yes
      when: file_stat.stat.exists
    
    - name: Создаем дамп базы данных
      command: >
        pg_dump -h {{ db_host_cloud }} -p {{ db_port_cloud }} -U {{ db_user_cloud }} -F c -b -v -f "{{ backup_file }}" "{{ db_name_cloud}}"
      environment:
        PGPASSWORD: "{{ db_password_cloud }}"   
      register: dump_result

    - name: Проверяем создан ли бэкап
      debug:
        msg: "Дамп успешно создан: {{ backup_file }}"
      when: dump_result.rc == 0

    - name: Ошибка создания бэкапа
      debug:
        msg: "Ошибка создания базы данных {{ db_name_local }}"
      when: dump_result.rc != 0

    - name: Получаем файл дамп базы данных с удаленного сервера
      ansible.builtin.fetch:
        src: "{{ backup_file }}"
        dest: templates2/
        flat: yes
      become: yes



    - name: переименовываем файл дампа pgsql, добавляем дата время
      shell:
        cmd: |
          mv "{{ backup_file }}" "{{new_name}}"



    - name: Получаем файл дамп базы данных с удаленного сервера время и дата
      ansible.builtin.fetch:
        src: "{{new_name}}"
        dest: "templates2/rezerv/"
        flat: yes
      become: yes